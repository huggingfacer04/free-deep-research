name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  NODE_ENV: test
  MOCK_APIS: true

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: bmad-agent/free-deep-research/package-lock.json
        
    - name: Install dependencies
      working-directory: bmad-agent/free-deep-research
      run: npm ci
      
    - name: Run type checking
      working-directory: bmad-agent/free-deep-research
      run: npm run type-check
      
    - name: Run linting
      working-directory: bmad-agent/free-deep-research
      run: npm run lint
      
    - name: Run unit tests
      working-directory: bmad-agent/free-deep-research
      run: npm test -- --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: bmad-agent/free-deep-research/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        rust-version: [stable, beta]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust ${{ matrix.rust-version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        override: true
        components: rustfmt, clippy
        
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          bmad-agent/free-deep-research/src-tauri/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Check formatting
      working-directory: bmad-agent/free-deep-research/src-tauri
      run: cargo fmt -- --check
      
    - name: Run Clippy
      working-directory: bmad-agent/free-deep-research/src-tauri
      run: cargo clippy -- -D warnings
      
    - name: Run tests
      working-directory: bmad-agent/free-deep-research/src-tauri
      run: cargo test --verbose
      
    - name: Run tests with coverage
      working-directory: bmad-agent/free-deep-research/src-tauri
      run: |
        cargo install cargo-tarpaulin
        cargo tarpaulin --out Xml --output-dir coverage/
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: bmad-agent/free-deep-research/src-tauri/coverage/cobertura.xml
        flags: backend
        name: backend-coverage
        
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: bmad-agent/free-deep-research/package-lock.json
        
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y webkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
        
    - name: Install dependencies
      working-directory: bmad-agent/free-deep-research
      run: npm ci
      
    - name: Install Playwright browsers
      working-directory: bmad-agent/free-deep-research
      run: npx playwright install --with-deps
      
    - name: Build application
      working-directory: bmad-agent/free-deep-research
      run: npm run build:frontend
      
    - name: Run E2E tests
      working-directory: bmad-agent/free-deep-research
      run: npm run test:e2e
      
    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: bmad-agent/free-deep-research/playwright-report/
        retention-days: 30
        
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: bmad-agent/free-deep-research/package-lock.json
        
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Install dependencies
      working-directory: bmad-agent/free-deep-research
      run: npm ci
      
    - name: Run npm audit
      working-directory: bmad-agent/free-deep-research
      run: npm audit --audit-level moderate
      
    - name: Run cargo audit
      working-directory: bmad-agent/free-deep-research/src-tauri
      run: |
        cargo install cargo-audit
        cargo audit
        
    - name: Run Semgrep security scan
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/typescript
          p/rust
